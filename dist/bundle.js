(()=>{"use strict";var t={d:(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function r(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function n(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,r,n){return(r=function(t){var r=function(t,r){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(r)?r:r+""}(r))in t?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n,t}function i(t,r){r=r||{};for(var o=arguments.length,i=new Array(o>2?o-2:0),u=2;u<o;u++)i[u-2]=arguments[u];return{type:t,props:n(n({},r),{},{children:i.map((function(t){return"object"===e(t)?t:{type:"TEXT_ELEMENT",props:{nodeValue:t,children:[]}}}))})}}t.d({},{n:()=>i});var u=[],c=0,l=null;function a(t,e){c=0;var r=f(e,l,t);l=r}function f(t,e,r){if(null==e){var n=p(r);return t.appendChild(n.dom),n}if(null===r)return t.removeChild(e.dom),null;if(e.element.type===r.type)return y(e.dom,e.element.props,r.props),e.childInstance=f(e.dom,e.childInstance,r.props.children[0]),e.element=r,e;var o=p(r);return t.replaceChild(o.dom,e.dom),o}function p(t){var e=t.type,r=t.props,n="TEXT_ELEMENT"===e,o=n?document.createTextNode(r.nodeValue):"function"==typeof e?function(t,e){return p(t(e)).dom}(e,r):document.createElement(e);n||"function"==typeof e||y(o,[],r);var i=(r.children||[]).map(p);return i.map((function(t){return t.dom})).forEach((function(t){return o.appendChild(t)})),{dom:o,element:t,childInstance:i[0]}}function y(t,e,r){var n=function(t){return t.startsWith("on")},o=function(t){return!n(t)&&"children"!==t};Object.keys(e).filter(n).forEach((function(r){var n=r.toLowerCase().substring(2);t.removeEventListener(n,e[r])})),Object.keys(e).filter(o).forEach((function(e){t[e]=null})),Object.keys(r).filter(o).forEach((function(e){t[e]=r[e]})),Object.keys(r).filter(n).forEach((function(e){var n=e.toLowerCase().substring(2);t.addEventListener(n,r[e])}))}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}var m=document.getElementById("root");a(i((function(){var t,e,r,n=(0,u[t=c]=u[t]||0,c++,e=[u[t],function(e){u[t]=e,a()}],r=2,function(t){if(Array.isArray(t))return t}(e)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,u,c=[],l=!0,a=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=i.call(r)).done)&&(c.push(n.value),c.length!==e);l=!0);}catch(t){a=!0,o=t}finally{try{if(!l&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(a)throw o}}return c}}(e,r)||function(t,e){if(t){if("string"==typeof t)return s(t,e);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],l=n[1];return i("div",null,i("h1",null,"Count: ",o),i("button",{onClick:function(){return l(o+1)}},"Increment"))})),m)})();